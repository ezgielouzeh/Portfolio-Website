{"version":3,"sources":["webpack:///./src/assets/images/plantter.gif","webpack:///./src/assets/images/ditchionary.gif","webpack:///./src/pages/Projects.js","webpack:///./src/assets/images/portfolio.gif","webpack:///./src/assets/images/courses.gif"],"names":["module","exports","IndexPage","fullMenu","id","className","src","ditchionaryGif","config","projects","ditchionary","map","social","style","icon","name","url","key","href","target","coursesGif","courses","plantterGif","plantter","portfolioGif","portfolio"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,wD,qBCA3CD,EAAOC,QAAU,IAA0B,2D,kCCA3C,qJA4KeC,UAnKG,kBAChB,kBAAC,IAAD,CAAQC,UAAQ,GACd,6BAASC,GAAG,QACV,gCACE,yCAEF,6BAASC,UAAU,kBACjB,yBAAKA,UAAU,SACb,yBAAKD,GAAG,eACN,2CACA,8EACA,2BACE,0BAAMC,UAAU,eAAc,yBAAKC,IAAKC,OAD1C,kSAGE,6BAAM,6BAHR,wKAKE,6BAAM,6BALR,2DAOE,6BAPF,kKASE,6BAAM,6BATR,gGAWE,6BAAM,6BAXR,wBAaE,6BAbF,yBAcwB,6BAdxB,8CAe6C,6BAC3C,6BAhBF,2FAqBA,wBAAIF,UAAU,SACXG,IAAOC,SAASC,YAAYC,KAAK,SAAAC,GAChC,IAAOC,EAA0BD,EAA1BC,MAAOC,EAAmBF,EAAnBE,KAAMC,EAAaH,EAAbG,KAAMC,EAAOJ,EAAPI,IAC1B,OACE,wBAAIC,IAAKD,GACP,uBACEE,KAAMF,EACNG,OAAO,SACPd,UAAS,cAAgBQ,EAAhB,IAAyBC,GAElC,0BAAMT,UAAU,SAASU,UAOrC,6BACA,6BAEA,yBAAKX,GAAG,WACN,2CACA,8EACA,2BACE,0BAAMC,UAAU,eAAc,yBAAKC,IAAKc,OAD1C,uJAGE,6BAAK,6BAHP,yEAKE,6BAAK,6BALP,2CAM0C,6BAN1C,qDAOoD,6BAPpD,0DAQyD,6BARzD,gEAS+D,6BAT/D,yBAUwB,6BAVxB,6BAW4B,8BAG5B,wBAAIf,UAAU,SACXG,IAAOC,SAASY,QAAQV,KAAK,SAAAC,GAC5B,IAAOC,EAA0BD,EAA1BC,MAAOC,EAAmBF,EAAnBE,KAAMC,EAAaH,EAAbG,KAAMC,EAAOJ,EAAPI,IAC1B,OACE,wBAAIC,IAAKD,GACP,uBACEE,KAAMF,EACNG,OAAO,SACPd,UAAS,cAAgBQ,EAAhB,IAAyBC,GAElC,0BAAMT,UAAU,SAASU,UAOrC,6BACA,6BACA,6BAEA,yBAAKX,GAAG,YACN,8CACA,8EACA,2BACE,0BAAMC,UAAU,eAAc,yBAAKC,IAAKgB,OAD1C,wHAGE,6BAAM,6BAHR,qFAKE,6BAAM,6BALR,2CAOE,6BAPF,2CAQ0C,6BAR1C,kDASiD,6BATjD,2FAWE,6BAXF,wCAYuC,8BAEvC,wBAAIjB,UAAU,SACXG,IAAOC,SAASc,SAASZ,KAAK,SAAAC,GAC7B,IAAOC,EAA0BD,EAA1BC,MAAOC,EAAmBF,EAAnBE,KAAMC,EAAaH,EAAbG,KAAMC,EAAOJ,EAAPI,IAC1B,OACE,wBAAIC,IAAKD,GACP,uBACEE,KAAMF,EACNG,OAAO,SACPd,UAAS,cAAgBQ,EAAhB,IAAyBC,GAElC,0BAAMT,UAAU,SAASU,SAMnC,8BAGF,6BAEA,yBAAKX,GAAG,aACN,iDACA,8EACA,2BACE,0BAAMC,UAAU,eAAc,yBAAKC,IAAKkB,OAD1C,8NAKA,wBAAInB,UAAU,SACXG,IAAOC,SAASgB,UAAUd,KAAK,SAAAC,GAC9B,IAAOC,EAA0BD,EAA1BC,MAAOC,EAAmBF,EAAnBE,KAAMC,EAAaH,EAAbG,KAAMC,EAAOJ,EAAPI,IAC1B,OACE,wBAAIC,IAAKD,GACP,uBACEE,KAAMF,EACNG,OAAO,SACPd,UAAS,cAAgBQ,EAAhB,IAAyBC,GAElC,0BAAMT,UAAU,SAASU,UAOrC,6BACA,6BACA,6BACA,mC,qBCrKVf,EAAOC,QAAU,IAA0B,yD,qBCA3CD,EAAOC,QAAU,IAA0B","file":"component---src-pages-projects-js-b7969b121fcecdfc30d8.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/plantter-091b2ab87ca19ded35148f9d04f6525d.gif\";","module.exports = __webpack_public_path__ + \"static/ditchionary-fea907efe4354da6e1e9e8015d1bd20f.gif\";","import React from 'react';\n\nimport Layout from '../components/Layout';\nimport config from '../../config';\nimport portfolioGif from '../assets/images/portfolio.gif';\nimport plantterGif from '../assets/images/plantter.gif';\nimport coursesGif from '../assets/images/courses.gif';\nimport ditchionaryGif from '../assets/images/ditchionary.gif';\n\nconst IndexPage = () => (\n  <Layout fullMenu>\n    <article id=\"main\">\n      <header>\n        <h2>Projects</h2>\n      </header>\n      <section className=\"wrapper style5\">\n        <div className=\"inner\">\n          <div id=\"ditchionary\">\n            <h3>Ditchionary</h3>\n            <h4>Full Stack Developer | Mar 2021 | Solo Project</h4>\n            <p>\n              <span className=\"image right\"><img src={ditchionaryGif} /></span>\n              I developed an e-reader app that allows Turkish language learners to both hear what they read and see the translation of a word on the spot. The idea is to get rid of dictionaries while learning a language. I wanted to build something that will make the language learning process easier.\n              <br /><br />\n              Users can signup and login, in the home page they can see all the available books, they can go to a book, navigate to the pages, and read the page with two features;\n              <br /><br />\n              1) They can hear the text by clicking on the read button\n              <br />\n              2) They can see the translation of a word, when the user selects a word they will see a popup with the translation and hear the pronunciation at the same time.\n              <br /><br />\n              I implemented React on the frontend and utilized Node, Express and Sequelize for the backend.\n              <br /><br />\n              I worked on two APIs;\n              <br />\n              - Google Translate API<br />\n              - Speech Synthesis feature of WebSpeech API<br />\n              <br />\n              For pagination, I used a react library to move around pages.\n              I styled it with pure CSS.\n            </p>\n\n            <ul className=\"icons\">\n              {config.projects.ditchionary.map (social => {\n                const {style, icon, name, url} = social;\n                return (\n                  <li key={url}>\n                    <a\n                      href={url}\n                      target=\"_blank\"\n                      className={`icon fa-2x ${style} ${icon}`}\n                    >\n                      <span className=\"label\">{name}</span>\n                    </a>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n          <br />\n          <hr />\n\n          <div id=\"courses\">\n            <h3>Four Course</h3>\n            <h4>Full Stack Developer | May 2021 | Team Project</h4>\n            <p>\n              <span className=\"image right\"><img src={coursesGif} /></span>\n              Collaborating with a team of four, I built a browser app that gamifies the decision making process in choosing restaurants within a group of people.\n              <br/><br/>\n              We designed a RESTful app utilizing GeoLocation, Yelp and Mapbox APIs.\n              <br/><br/>\n              My contributions to the project include;<br/>\n              - Getting the userâ€™s location with GeoLocation API<br/>\n              - Displaying upcoming and past events based on the date<br/>\n              - Utilizing NodeMailer to send out mails to a group of people<br/>\n              - Date and Time picker<br/>\n              - Styling with Material UI<br/>\n            </p>\n\n            <ul className=\"icons\">\n              {config.projects.courses.map (social => {\n                const {style, icon, name, url} = social;\n                return (\n                  <li key={url}>\n                    <a\n                      href={url}\n                      target=\"_blank\"\n                      className={`icon fa-2x ${style} ${icon}`}\n                    >\n                      <span className=\"label\">{name}</span>\n                    </a>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n          <br />\n          <br />\n          <hr />\n\n          <div id=\"plantter\">\n            <h3>Grace Plantter</h3>\n            <h4>Full Stack Developer | May 2021 | Team Project</h4>\n            <p>\n              <span className=\"image right\"><img src={plantterGif} /></span>\n              With a team of four, I built a full stack e-commerce website that enables users to shop for plants and purchase them.\n              <br /><br />\n              We utilized React, Redux, NodeJs, Express, PostgreSQL, Sequelize and Github tools.\n              <br /><br />\n              My contributions to the project include;\n              <br />\n              - Home page for the list of all products<br />\n              - Database schema and building Sequelize models<br />\n              - Security steps such as no secrets on gitHub, protected API, and Express best practices\n              <br />\n              - Working on Stripe as a stretch goal<br />\n            </p>\n            <ul className=\"icons\">\n              {config.projects.plantter.map (social => {\n                const {style, icon, name, url} = social;\n                return (\n                  <li key={url}>\n                    <a\n                      href={url}\n                      target=\"_blank\"\n                      className={`icon fa-2x ${style} ${icon}`}\n                    >\n                      <span className=\"label\">{name}</span>\n                    </a>\n                  </li>\n                );\n              })}\n            </ul>\n            <br />\n          </div>\n\n          <hr />\n\n          <div id=\"portfolio\">\n            <h3>Portfolio Website</h3>\n            <h4>Full Stack Developer | Sep 2021 | Solo Project</h4>\n            <p>\n              <span className=\"image right\"><img src={portfolioGif} /></span>\n              I created my website using Gatsby and redesigned it utilizing React. I also experimented with a different portfolio project to explore React Hooks, which I wanted to improve myself at, before I settled in this version.\n            </p>\n\n            <ul className=\"icons\">\n              {config.projects.portfolio.map (social => {\n                const {style, icon, name, url} = social;\n                return (\n                  <li key={url}>\n                    <a\n                      href={url}\n                      target=\"_blank\"\n                      className={`icon fa-2x ${style} ${icon}`}\n                    >\n                      <span className=\"label\">{name}</span>\n                    </a>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n          <br />\n          <br />\n          <br />\n          <br />\n        </div>\n      </section>\n    </article>\n  </Layout>\n);\n\nexport default IndexPage;\n","module.exports = __webpack_public_path__ + \"static/portfolio-ba94daa0e99855e852117d3653c4a88c.gif\";","module.exports = __webpack_public_path__ + \"static/courses-143b10d99aff9cb56c9679edee87aec8.gif\";"],"sourceRoot":""}